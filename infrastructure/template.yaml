AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  BUDAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: production
      CacheClusterEnabled: true
      CacheClusterSize: '0.5'
      MethodSettings:
        - ResourcePath: /v1/polls
          CachingEnabled: true
          CacheTtlInSeconds: 600
          HttpMethod: "GET"
        - ResourcePath: /v1/polls/{pollId}
          CachingEnabled: true
          CacheTtlInSeconds: 600
          HttpMethod: "GET"
        - ResourcePath: /v1/users
          CachingEnabled: false
          HttpMethod: "POST"
        - ResourcePath: /v1/authorizeUser
          CachingEnabled: false
          HttpMethod: "POST"
      DefinitionBody:
          swagger: "2.0"
          info:
            version: "1"
            title: "between-us-drivers"
          basePath: "/v1"
          schemes:
            - "https"
          paths: 
            /v1/polls:
              get:
                responses: {}
                x-amazon-apigateway-integration:
                  uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:349390452115:function:BUDGetPollsHandler/invocations"
                  passthroughBehavior: "when_no_match"
                  httpMethod: "POST"
                  type: "aws_proxy"
            /v1/polls/{pollId}:
              get:
                responses: {}
                produces:
                - "application/json"
                parameters:
                - name: "pollId"
                  in: "path"
                  required: true
                  type: "string"
                x-amazon-apigateway-integration:
                  uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:349390452115:function:BUDGetPollHandler/invocations"
                  passthroughBehavior: "when_no_match"
                  httpMethod: "POST"
                  type: "aws_proxy"
                  cacheNamespace: "cs0i4n"
                  cacheKeyParameters:
                  - "method.request.path.pollId"
            /v1/users:
              post:
                responses: {}
                x-amazon-apigateway-integration:
                  uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:349390452115:function:BUDCreateUserHandler/invocations"
                  passthroughBehavior: "when_no_match"
                  httpMethod: "POST"
                  type: "aws_proxy"
            /v1/authorizeUser:
              post:
                responses: {}
                x-amazon-apigateway-integration:
                  uri: "arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:349390452115:function:BUDAuthorizeUserHandler/invocations"
                  passthroughBehavior: "when_no_match"
                  httpMethod: "POST"
                  type: "aws_proxy"
  BUDGetPollHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "BUDGetPollHandler"
      Handler: src/handlers/polls/getPoll.handler
      Runtime: nodejs8.10
      Events:
        Api:
          Type: Api
          Properties: 
            Path: /v1/polls/{pollId}
            Method: Get
            RestApiId: !Ref BUDAPI
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:GetItem'
              Resource:
                Fn::Sub: "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/BUDPollTable"
  BUDGetPollsHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "BUDGetPollsHandler"
      Handler: src/handlers/polls/getPolls.handler
      Runtime: nodejs8.10
      Events:
        Api:
          Type: Api
          Properties: 
            Path: /v1/polls
            Method: Get
            RestApiId: !Ref BUDAPI
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:Scan'
              Resource:
                Fn::Sub: "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/BUDPollTable"
  BUDCreateUserHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "BUDCreateUserHandler"
      Handler: src/handlers/users/createUser.handler
      Runtime: nodejs8.10
      Events:
        Api:
          Type: Api
          Properties: 
            Path: /v1/users
            Method: Post
            RestApiId: !Ref BUDAPI
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:PutItem'
              Resource:
                Fn::Sub: "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/BUDUserTable"
    BUDAuthorizeUserHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: "BUDAuthorizeUserHandler"
      Handler: src/handlers/users/authorizeUser.handler
      Runtime: nodejs8.10
      Events:
        Api:
          Type: Api
          Properties: 
            Path: /v1/authorizeUser
            Method: Post
            RestApiId: !Ref BUDAPI
      Policies:
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - 'dynamodb:Query'
              Resource:
                Fn::Sub: "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/BUDUserTable"
  BUDPollTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: BUDPollTable
      AttributeDefinitions:
        - AttributeName: pollId
          AttributeType: S
      KeySchema:
        - AttributeName: pollId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  BUDUserTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: BUDUserTable
      AttributeDefinitions:
        - AttributeName: userId
          AttributeType: S
      KeySchema:
        - AttributeName: userId
          KeyType: HASH
        - AttributeName: email
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  BUDUserVoteTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: BUDVoteTable
      AttributeDefinitions:
        - AttributeName: voteId
          AttributeType: S
      KeySchema:
        - AttributeName: voteId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1 
  BUDUserVoteTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: BUDUserVoteTable
      AttributeDefinitions:
        - AttributeName: userVoteId
          AttributeType: S
      KeySchema:
        - AttributeName: userVoteId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1 
  BUDCommentTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: BUDCommentTable
      AttributeDefinitions:
        - AttributeName: commentId
          AttributeType: S
      KeySchema:
        - AttributeName: commentId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1 
  BUDCommentVoteTable:
    Type: 'AWS::DynamoDB::Table'
    Properties:
      TableName: BUDCommentVoteTable
      AttributeDefinitions:
        - AttributeName: commentVoteId
          AttributeType: S
      KeySchema:
        - AttributeName: commentVoteId
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1 
