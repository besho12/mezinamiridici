AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Resources:
  BUDDomainName:
    Type: AWS::ApiGateway::DomainName
    Properties:
      CertificateArn: arn:aws:acm:us-east-1:349390452115:certificate/a42914a1-583d-479a-b3a5-1ebd2651491d
      DomainName: api.betweenusdrivers.jacobclark.dev
  BUDHostedZone:
    Type: AWS::Route53::HostedZone
    Properties:
      Name: api.betweenusdrivers.jacobclark.dev
  APIBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName:
        Ref: BUDDomainName
      RestApiId:
        Ref: BUDAPI
      Stage: production
  APIDomain:
    Type: AWS::Route53::RecordSetGroup
    Properties:
      HostedZoneId:
        Ref: BUDHostedZone
      RecordSets:
      - Name: api.betweenusdrivers.jacobclark.dev
        Type: A
        AliasTarget:
          DNSName:
            Fn::GetAtt:
            - BUDDomainName
            - DistributionDomainName
          HostedZoneId: Z2FDTNDATAQYW2
      - Name: _9492ef477a77eb88288d14ff52b92377.api.betweenusdrivers.jacobclark.dev.
        Type: CNAME
        TTL: '900'
        SetIdentifier: DNS Verification
        Weight: '6'
        ResourceRecords:
        - _08364b503ac9876f834dcccc940494b1.olprtlswtu.acm-validations.aws.
  BUDAPI:
    Type: AWS::Serverless::Api
    Properties:
      StageName: production
      CacheClusterEnabled: true
      CacheClusterSize: '0.5'
      MethodSettings:
      - ResourcePath: /v1/polls
        CachingEnabled: true
        CacheTtlInSeconds: 600
        HttpMethod: GET
      - ResourcePath: /v1/polls
        CachingEnabled: false
        HttpMethod: POST
      - ResourcePath: /v1/polls/{pollId}
        CachingEnabled: true
        CacheTtlInSeconds: 600
        HttpMethod: GET
      - ResourcePath: /v1/users
        CachingEnabled: false
        HttpMethod: POST
      - ResourcePath: /v1/users/{userId}
        CachingEnabled: true
        CacheTtlInSeconds: 600
        HttpMethod: GET
      - ResourcePath: /v1/users/{userId}
        CachingEnabled: false
        HttpMethod: POST
      - ResourcePath: /v1/authorizeUser
        CachingEnabled: false
        HttpMethod: POST
      DefinitionBody:
        swagger: '2.0'
        info:
          version: '1'
          title: between-us-drivers
        basePath: /v1
        schemes:
        - https
        paths:
          /v1/polls:
            get:
              responses: {}
              security:
              - BasicAuthorizer: []
              x-amazon-apigateway-integration:
                uri: arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:349390452115:function:BUDGetPollsHandler/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
            post:
              responses: {}
              x-amazon-apigateway-integration:
                uri: arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:349390452115:function:BUDCreatePollHandler/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
          /v1/polls/{pollId}:
            get:
              responses: {}
              produces:
              - application/json
              parameters:
              - name: pollId
                in: path
                required: true
                type: string
              x-amazon-apigateway-integration:
                uri: arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:349390452115:function:BUDGetPollHandler/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
                cacheNamespace: cs0i4n
                cacheKeyParameters:
                - method.request.path.pollId
          /v1/users:
            post:
              responses: {}
              x-amazon-apigateway-integration:
                uri: arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:349390452115:function:BUDCreateUserHandler/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
          /v1/users/{userId}:
            post:
              responses: {}
              parameters:
              - name: userId
                in: path
                required: true
                type: string
              x-amazon-apigateway-integration:
                uri: arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:349390452115:function:BUDUpdateUserHandler/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
            get:
              responses: {}
              parameters:
              - name: userId
                in: path
                required: true
                type: string
              x-amazon-apigateway-integration:
                uri: arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:349390452115:function:BUDGetUserHandler/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
          /v1/authorizeUser:
            post:
              responses: {}
              x-amazon-apigateway-integration:
                uri: arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:349390452115:function:BUDAuthorizeUserHandler/invocations
                passthroughBehavior: when_no_match
                httpMethod: POST
                type: aws_proxy
        securityDefinitions:
          BasicAuthorizer:
            type: apiKey
            name: Authorization
            in: header
            x-amazon-apigateway-authtype: custom
            x-amazon-apigateway-authorizer:
              authorizerUri: arn:aws:apigateway:eu-west-1:lambda:path/2015-03-31/functions/arn:aws:lambda:eu-west-1:349390452115:function:BUDAuthorizerHandler/invocations
              authorizerResultTtlInSeconds: 0
              identityValidationExpression: ^[Bb]earer [-0-9a-zA-z\.]*$
              type: token
  BUDGetPollHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: BUDGetPollHandler
      Handler: src/handlers/polls/getPoll.handler
      Runtime: nodejs8.10
      Events:
        Api:
          Type: Api
          Properties:
            Path: /v1/polls/{pollId}
            Method: Get
            RestApiId:
              Ref: BUDAPI
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:GetItem
          Resource:
            Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/BUDPollTable
      CodeUri: s3://between-us-drivers-infrastructure/1c3bf5d0170e7dbd0a8f2d790c02e98f
  BUDCreatePollHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: BUDCreatePollHandler
      Handler: src/handlers/polls/createPoll.handler
      Runtime: nodejs8.10
      Events:
        Api:
          Type: Api
          Properties:
            Path: /v1/polls
            Method: Post
            RestApiId:
              Ref: BUDAPI
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:PutItem
          Resource:
            Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/BUDPollTable
      CodeUri: s3://between-us-drivers-infrastructure/1c3bf5d0170e7dbd0a8f2d790c02e98f
  BUDGetPollsHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: BUDGetPollsHandler
      Handler: src/handlers/polls/getPolls.handler
      Runtime: nodejs8.10
      Events:
        Api:
          Type: Api
          Properties:
            Path: /v1/polls
            Method: Get
            RestApiId:
              Ref: BUDAPI
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:Scan
          Resource:
            Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/BUDPollTable
      CodeUri: s3://between-us-drivers-infrastructure/1c3bf5d0170e7dbd0a8f2d790c02e98f
  BUDGetUserHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: BUDGetUserHandler
      Handler: src/handlers/users/getUser.handler
      Runtime: nodejs8.10
      Events:
        Api:
          Type: Api
          Properties:
            Path: /v1/users/{userId}
            Method: Get
            RestApiId:
              Ref: BUDAPI
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:GetItem
          Resource:
            Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/BUDUserTable
      CodeUri: s3://between-us-drivers-infrastructure/1c3bf5d0170e7dbd0a8f2d790c02e98f
  BUDCreateUserHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: BUDCreateUserHandler
      Handler: src/handlers/users/createUser.handler
      Runtime: nodejs8.10
      Events:
        Api:
          Type: Api
          Properties:
            Path: /v1/users
            Method: Post
            RestApiId:
              Ref: BUDAPI
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:PutItem
          Resource:
            Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/BUDUserTable
        - Effect: Allow
          Action:
          - dynamodb:PutItem
          Resource:
            Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/BUDUserTable/index/PasswordFromEmailIndex
      CodeUri: s3://between-us-drivers-infrastructure/1c3bf5d0170e7dbd0a8f2d790c02e98f
  BUDUpdateUserHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: BUDUpdateUserHandler
      Handler: src/handlers/users/updateUser.handler
      Runtime: nodejs8.10
      Events:
        Api:
          Type: Api
          Properties:
            Path: /v1/users/{userId}
            Method: Post
            RestApiId:
              Ref: BUDAPI
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:UpdateItem
          Resource:
            Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/BUDUserTable
        - Effect: Allow
          Action:
          - dynamodb:UpdateItem
          Resource:
            Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/BUDUserTable/index/PasswordFromEmailIndex
      CodeUri: s3://between-us-drivers-infrastructure/1c3bf5d0170e7dbd0a8f2d790c02e98f
  BUDAuthorizeUserHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: BUDAuthorizeUserHandler
      Handler: src/handlers/users/authorizeUser.handler
      Runtime: nodejs8.10
      Events:
        Api:
          Type: Api
          Properties:
            Path: /v1/authorizeUser
            Method: Post
            RestApiId:
              Ref: BUDAPI
      Policies:
      - Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Action:
          - dynamodb:Query
          Resource:
            Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/BUDUserTable
        - Effect: Allow
          Action:
          - dynamodb:Query
          Resource:
            Fn::Sub: arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/BUDUserTable/index/PasswordFromEmailIndex
      CodeUri: s3://between-us-drivers-infrastructure/1c3bf5d0170e7dbd0a8f2d790c02e98f
  BUDAuthorizerHandler:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: BUDAuthorizerHandler
      Handler: src/handlers/authorizer/authorize.handler
      Runtime: nodejs8.10
      CodeUri: s3://between-us-drivers-infrastructure/1c3bf5d0170e7dbd0a8f2d790c02e98f
  BUDPollTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: BUDPollTable
      AttributeDefinitions:
      - AttributeName: pollId
        AttributeType: S
      KeySchema:
      - AttributeName: pollId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  BUDUserTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: BUDUserTable
      AttributeDefinitions:
      - AttributeName: userId
        AttributeType: S
      - AttributeName: email
        AttributeType: S
      KeySchema:
      - AttributeName: userId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      GlobalSecondaryIndexes:
      - IndexName: PasswordFromEmailIndex
        KeySchema:
        - AttributeName: email
          KeyType: HASH
        Projection:
          ProjectionType: ALL
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
  BUDUserVoteTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: BUDUserVoteTable
      AttributeDefinitions:
      - AttributeName: userVoteId
        AttributeType: S
      KeySchema:
      - AttributeName: userVoteId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  BUDCommentTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: BUDCommentTable
      AttributeDefinitions:
      - AttributeName: commentId
        AttributeType: S
      KeySchema:
      - AttributeName: commentId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
  BUDCommentVoteTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: BUDCommentVoteTable
      AttributeDefinitions:
      - AttributeName: commentVoteId
        AttributeType: S
      KeySchema:
      - AttributeName: commentVoteId
        KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
